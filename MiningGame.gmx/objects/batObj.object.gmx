<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>bat_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isReady = true;
isFlying = false;
restCounter = 150;
restLimit = 150;
breathTimer = 180;

directionMod = 1;       //controls which way the bat moves.
batSpeed = 3 + global.tier; 

image_speed = 0;
image_index = 0;
//image_xscale = 0.2;
//image_yscale = 0.2;

//move bat on the path.
//path_start(batPath, 4, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Is the player close?</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the player is one tile away, then the bat moves.
if (!isFlying)
{
    //check if player is close.
    if (distance_to_object(playerObj) &lt;= TILE_SIZE)
    {
       
        if (playerObj.x - x &lt; 0)
        {
            //player is on the left side.
            directionMod = -1;
        }
        else
        {
            directionMod = 1;
        }
        
        path_start(batPath, batSpeed * directionMod, 0, 0);
        isFlying = true;
        restCounter = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>show_debug_message("Bat path speed = " + string(path_speed));
//if (path_speed == 0)//does not work
//{
    if (restCounter &lt; restLimit)
    {
        restCounter++;
    }
    else
    {
        isFlying = false;
    }
    
//}


/*if (isReady &amp;&amp; distance_to_object(playerObj) &lt; 210){
    var ex = instance_nearest(x, y, playerObj).x;
    var ey = instance_nearest(x, y, playerObj).y;
    direction = point_direction(x, y, ex, ey);
    isFlying = true;
    isReady = false;
}

if(isFlying){
    speed = 8;
    image_speed = 0.7;
}

if(distance_to_object(playerObj) &lt; 30){
    breathTimer--;

switch(breathTimer){
    case 150:
    case 120:
    case 90:
    case 60:
    case 30:
        global.oxygen--;
        break;
    case 0:
        global.oxygen--;
        gasTimer = 160;
        break;
}
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(restCounter &lt; restLimit){
    speed = 0;
    image_speed = 0;
    restCounter++;
    isFlying = false;
}
else{
    isReady = true;
    restCounter = 0;
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
