<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//ads setup
GoogleMobileAds_Init("ca-app-pub-8058703801168579/3888533042", "");
GoogleMobileAds_AddBanner();

script_execute(init_script);


//scale the screen
global.ratio = display_get_width() / display_get_height();


view_wview = display_get_width();
view_hview = display_get_height();

view_wport = view_wview;
view_hport = view_hview;


global.scaleX = 1;
global.scaleY = 1;

//display_set_gui_size(view_wview, view_hview);

show_debug_message("View Height: " + string(view_hview));
show_debug_message("View Width: " + string(view_wview));
show_debug_message("Port Height: " + string(view_hport));
show_debug_message("Port Width: " + string(view_wport));

//global.scaleX = display_get_width() / DEFAULT_WIDTH;
//global.scaleY = display_get_height() / DEFAULT_HEIGHT;
show_debug_message("Scale X on setup is " + string(global.scaleX));
show_debug_message("Scale Y on setup is " + string(global.scaleY));
show_debug_message("Display width on setup is " + string(display_get_width()));
show_debug_message("Display height on setup is " + string(display_get_height()));

//set the room sizes to the display.
/*if (display_get_width() != DEFAULT_WIDTH)
{
    room_set_width(titleScreen, display_get_width());
    room_set_width(menuScreen, display_get_width());
    room_set_width(helpScreen, display_get_width());
    room_set_width(tutorialScreen, display_get_width());
    room_set_width(aboutScreen, display_get_width());
    room_set_width(levelSelectScreen, display_get_width());
    room_set_width(gameScreen, display_get_width());
    room_set_width(creditsScreen, display_get_width());
    room_set_width(endingScreen, display_get_width());

}

if (display_get_height() != DEFAULT_HEIGHT)
{
    room_set_height(titleScreen, display_get_height());
    room_set_height(menuScreen, display_get_height());
    room_set_height(helpScreen, display_get_height());
    room_set_height(tutorialScreen, display_get_height());
    room_set_height(aboutScreen, display_get_height());
    room_set_height(levelSelectScreen, display_get_height());
    room_set_height(gameScreen, display_get_height());
    room_set_height(creditsScreen, display_get_height());
    room_set_height(endingScreen, display_get_height());

}*/


room_goto(titleScreen);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
