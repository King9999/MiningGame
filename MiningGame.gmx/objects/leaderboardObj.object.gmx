<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_device != device_tablet)
{
    //reduce the view a bit so everything isn't tiny
    view_wview = ceil(display_get_width() * 0.8);
    view_hview = ceil(display_get_height() * 0.8);
}
else
{
    view_wview = display_get_width();
    view_hview = display_get_height();
}
view_wport = view_wview;
view_hport = view_hview;

instance_create(0, 0, menuBGObj);

/**Mock leaderboard setup NOTE: Google Play will handle this when the game is live. **/
var file = working_directory + "leaderboarddata.ini";
if (!file_exists(file))
{
    //create &amp; initialize file
    script_execute(createLeaderboard);
}

levelRankArray = 0;
cashRankArray = 0;

//populate the arrays. Values should already be sorted.
ini_open(file);
for (var i = 0; i &lt; 10; i++)
{
    levelRankArray[i] = ini_read_real("LowestLevel", "rank" + string(i + 1), 1);
    cashRankArray[i] = ini_read_real("TotalCash", "rank" + string(i + 1), 1000);
}

ini_close();


label = "Leaderboard";

backButton = instance_create(room_width / 2, room_height - 60, backButtonObj);
backButton.x -= backButton.sprite_width / 2;

pageNumber = 1; 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pageNumber == 2)
{
    pageNumber = 1;
}
else
{
    pageNumber = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//memory cleanup

/*if (ds_exists(objectGrid, ds_type_grid))
{
    ds_grid_destroy(objectGrid);
}*/

if (ds_exists(global.mapGrid, ds_type_grid))
{
    ds_grid_destroy(global.mapGrid);
}

if (ds_exists(global.finishedGrid, ds_type_grid))
{
    ds_grid_destroy(global.finishedGrid);
}

if (ds_exists(global.aStarGrid, ds_type_grid))
{
    ds_grid_destroy(global.aStarGrid);
}

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}


/*if (ds_exists(global.objectGrid, ds_type_grid))
{
    ds_grid_destroy(global.objectGrid);
}*/

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}

if (part_system_exists(global.particleSystem))
{
    part_system_destroy(global.particleSystem);
}

if (part_type_exists(global.dirtPart))
{
    part_type_destroy(global.dirtPart);
}

if (part_type_exists(global.sparkPart))
{
    part_type_destroy(global.sparkPart);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_font(levelModFont);
draw_set_colour(c_white);
draw_text(view_wview / 2 - (string_width(label) / 2), 100, label);

//rank display
draw_set_font(gameScreenFont);

if (pageNumber == 1)
{
    draw_text(view_wview / 2, view_hview * 0.30, "Lowest Floor Completed");
    
    var i = 0;
    while (i &lt; array_length_1d(levelRankArray))
    {
        draw_text(view_wview / 2, view_hview * 0.34 + (i * 20), string(i + 1) + ". " + string(levelRankArray[i]));
        i++;
    }
    
}
else
{
    draw_text(view_wview / 2, view_hview * 0.30, "Total Cash Collected");
    
    var i = 0;
    while (i &lt; array_length_1d(cashRankArray))
    {
        draw_text(view_wview / 2, view_hview * 0.34 + (i * 20), string(i + 1) + ". " + string(cashRankArray[i]));
        i++;
    }
}

//page number
draw_text(view_wview / 2, view_hview * 0.9, "Page " + string(pageNumber) + "/2");

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
