<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (os_device != device_tablet)
{
    //reduce the view a bit so everything isn't tiny
    view_wview = ceil(display_get_width() * 0.8);
    view_hview = ceil(display_get_height() * 0.8);
}
else
{
    view_wview = display_get_width();
    view_hview = display_get_height();
}
view_wport = view_wview;
view_hport = view_hview;

//this step must be done so that the gui is aligned properly on different devices.
display_set_gui_size(view_wview, view_hview);

//create a diagonal scrolling background. Requires 4 copies of the background image.
display_set_gui_size(view_wview, view_hview);


background = instance_create(0, 0, menuBGObj);
//background[1] = instance_create(view_wview, 0, menuBGObj);
//background[2] = instance_create(0, view_hview, menuBGObj);
//background[3] = instance_create(view_wview, view_hview, menuBGObj);


startButton = instance_create(view_wview / 4, view_hview / 2, startButtonObj);
customizeBtn = instance_create(startButton.x + 160, view_hview / 2, customizeBtnObj);
leaderButton = instance_create(startButton.x + 320, view_hview / 2, leaderboardBtnObj);
recordsButton = instance_create(startButton.x + 480, view_hview / 2, recordsButtonObj);
tutorialButton = instance_create(startButton.x + 80, view_hview / 1.2, tutorialBtnObj);
optionsButton = instance_create(tutorialButton.x + 160, view_hview / 1.2, optionsBtnObj);
creditsButton = instance_create(tutorialButton.x + 320, view_hview / 1.2, creditsBtnObj);
collectionButton = instance_create(tutorialButton.x + 480, view_hview / 1.2, collectionBtnObj);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Check if music needs to play</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.musicEnabled &amp;&amp; !sound_isplaying(menu))
{
    sound_play(menu);
    sound_volume(menu, 0.2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*for (var i = 0; i &lt; array_length_1d(background); i++)
{
    background[i].x -= 8;
    background[i].y += 8;
    
    if (background[i].x + background[i].sprite_width &lt;= 0)
    {
        background[i].x = view_wview;
        background[i].y = -view_hview;
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//screen_save(working_directory + "testshot.png");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>stop music</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.nextScreen == loadScreen)
    sound_stop_all();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//memory cleanup

/*if (ds_exists(objectGrid, ds_type_grid))
{
    ds_grid_destroy(objectGrid);
}*/

if (ds_exists(global.mapGrid, ds_type_grid))
{
    ds_grid_destroy(global.mapGrid);
}

if (ds_exists(global.finishedGrid, ds_type_grid))
{
    ds_grid_destroy(global.finishedGrid);
}

if (ds_exists(global.aStarGrid, ds_type_grid))
{
    ds_grid_destroy(global.aStarGrid);
}

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}

/*if (ds_exists(global.objectGrid, ds_type_grid))
{
    ds_grid_destroy(global.objectGrid);
}*/

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}

if (part_system_exists(global.particleSystem))
{
    part_system_destroy(global.particleSystem);
}

if (part_type_exists(global.dirtPart))
{
    part_type_destroy(global.dirtPart);
}

if (part_type_exists(global.sparkPart))
{
    part_type_destroy(global.sparkPart);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//display miner coins
draw_set_font(gameScreenFont);
draw_set_colour(c_white);
draw_text(view_wview / 2, view_hview - 30, "Miner Coins: " + string(global.minerCoins));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
