<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check for an existing record file.
backButton = instance_create(room_width / 2, room_height - 60, backButtonObj);
backButton.x -= backButton.sprite_width / 2; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//memory cleanup

/*if (ds_exists(objectGrid, ds_type_grid))
{
    ds_grid_destroy(objectGrid);
}*/

if (ds_exists(global.mapGrid, ds_type_grid))
{
    ds_grid_destroy(global.mapGrid);
}

if (ds_exists(global.finishedGrid, ds_type_grid))
{
    ds_grid_destroy(global.finishedGrid);
}

if (ds_exists(global.aStarGrid, ds_type_grid))
{
    ds_grid_destroy(global.aStarGrid);
}

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}


/*if (ds_exists(global.objectGrid, ds_type_grid))
{
    ds_grid_destroy(global.objectGrid);
}*/

if (ds_exists(global.inventory, ds_type_list))
{
    ds_list_destroy(global.inventory);
}

if (part_system_exists(global.particleSystem))
{
    part_system_destroy(global.particleSystem);
}

if (part_type_exists(global.dirtPart))
{
    part_type_destroy(global.dirtPart);
}

if (part_type_exists(global.sparkPart))
{
    part_type_destroy(global.sparkPart);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(rec_sprite, 0, view_wview / 2.5, 50);

draw_set_font(recordsFont);
draw_set_colour(c_white);
draw_text(view_wview / 2.5, 140, "Lowest floor cleared: B" + string(global.floorsCleared));
draw_text(view_wview / 2.5, 180, "Distance traveled: " + string(global.totalDistance) + "m");
draw_text(view_wview / 2.5, 220, "Total cash accumulated: $" + string(global.totalCash));
draw_text(view_wview / 2.5, 260, "Total cash spent: $" + string(global.cashSpent));
draw_text(view_wview / 2.5, 300, "Total enemies defeated: " + string(global.enemiesKilled));
draw_text(view_wview / 2.5, 340, "Total hearts lost: " + string(global.totalHeartsLost));
draw_text(view_wview / 2.5, 380, "Bonus stages discovered: " + string(global.bonusStageCount));
draw_text(view_wview / 2.5, 420, "Close Calls: " + string(global.closeCallCount));
draw_text(view_wview / 2.5, 460, "Total Destructions: " + string(global.floorsCompletelyCleared));
draw_text(view_wview / 2.5, 540, "---Upgrade Totals---");
draw_text(view_wview / 2.5, 580, "Pickaxe: " + string(global.pickaxeUpgradeCount));
draw_text(view_wview / 2.5, 620, "O2 Tank: " + string(global.oxygenTankUpgradeCount));
draw_text(view_wview / 2.5, view_hview - 100, "Heart: " + string(global.heartUpgradeCount));
draw_text(view_wview / 2.5, view_hview - 50, "Lantern: " + string(global.lanternUpgradeCount));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
