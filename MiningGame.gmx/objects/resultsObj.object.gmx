<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* This object is used to display results when either player exits the level or they die. */

i = 0;
j = 0;              //iterators
xPos = -200;
msgXPos = room_width + 200;
finishedScrolling = false;      //used to start animating results screen.
resultsFinished = false;        //used to move to rest area
tempCash = global.cash;
tempOxygen = global.oxygen;
alarm[0] = 0;                   //short delay before screen transition.

endLevelMsg = "Floor Clear!"; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Move to the rest area or the next level.
if (!global.inRestArea)
{
    //just finished level, go to rest area
    if (resultsFinished)
    {
        alarm[0]++;
        if (alarm[0] &gt; 60)
        {
            //global.nextScreen = loadScreen;
            global.nextScreen = restScreen;
            global.inRestArea = true;
            instance_create(view_xview, view_yview, screenFadeObj);
            instance_destroy();
        }
    }
}
else    //move to next level
{
    global.nextScreen = loadScreen;
    global.inRestArea = false;
    instance_create(view_xview, view_yview, screenFadeObj);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.inRestArea) //don't want to show results if player is in the rest area.
{
    xPos = lerp(xPos, view_wview / 2.5, 0.1);
    msgXPos = lerp(msgXPos, view_wview / 2.5 - string_length(endLevelMsg), 0.1);
    
    //global.cashBonus = 10000;
    //tempCash = global.cash;
    if (!finishedScrolling &amp;&amp; xPos &gt;= view_wview / 2.5 - 1)
    {
        xPos = view_wview / 2.5;
        finishedScrolling = true;
        show_debug_message("Finished scrolling");
    }
    
    if (!resultsFinished &amp;&amp; finishedScrolling)
    {
        //begin adding the bonus to cash, oxygen &amp; hearts.
        if (i &lt; global.cashBonus)
        {
            tempCash += floor(global.cashBonus * 0.01);
            global.currentTotalCash += floor(global.cashBonus * 0.01);
            i += floor(global.cashBonus * 0.01);
        }
        
        if (j &lt; global.oxygenBonus)
        {
            tempOxygen += floor(global.oxygenBonus * 0.1);
            
             if (tempOxygen &gt; MAX_OXYGEN)
             {
                tempOxygen = MAX_OXYGEN;
                j = global.oxygenBonus;
             }
                   
            j += floor(global.oxygenBonus * 0.1);
        }
        
        if (i &gt;= global.cashBonus &amp;&amp; j &gt;= global.oxygenBonus)
        {
            global.cash = tempCash;
            global.oxygen = tempOxygen;
            //global.totalCash = global.cash;
            resultsFinished = true;
        }
    }
    
    //if at any point player taps the screen, skip all animation.
    if (!resultsFinished &amp;&amp; device_mouse_check_button_pressed(0, mb_left))
    {
        xPos = view_wview / 2.5;
        msgXPos = view_wview / 2.5 - string_length(endLevelMsg);
        finishedScrolling = true;
        resultsFinished = true;
        global.cash += global.cashBonus;
        global.currentTotalCash += global.cashBonus;
        global.oxygen += global.oxygenBonus;
        if (global.oxygen &gt; MAX_OXYGEN)
            global.oxygen = MAX_OXYGEN;
        tempCash = global.cash;
        tempOxygen = global.oxygen;
        //global.totalCash = global.cash;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>script_execute(updateRecords);    //TODO: should be done in the rest area.  
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(gameScreenFont);
draw_set_colour(c_white);
draw_text(xPos, view_hview / 2, "Cash: $" + string(tempCash));
draw_text(xPos, (view_hview / 2 + 40), "Remaining O2: " + string(tempOxygen) + "%");

//bonus displays
draw_text(msgXPos, (view_hview / 2 + 120), "--BONUSES--");

var bonusYPos = 160;
if (!global.onBonusStage)
{
    //standard bonus
    draw_text(msgXPos, (view_hview / 2  + bonusYPos), "Found the exit - oxygen +10%");
    
    //all destructible rocks cleared
    if (global.rockCount &lt;= 0)
    {
        bonusYPos += 30;
        draw_text(msgXPos, (view_hview / 2  + bonusYPos), "All rocks cleared! - +$" + string(10000 * global.tier) + ", oxygen +20%");
    }
}

draw_set_font(levelModFont);
draw_text(msgXPos, view_hview / 4, endLevelMsg);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
